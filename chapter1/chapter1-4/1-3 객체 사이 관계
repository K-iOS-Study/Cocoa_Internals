# 1.3 객체 사이 관계
## * 메타 클래스 

클래스 : 인스턴스 메서드를 가지고 있음.
메타 클래스: 클래스 메서드를 가지고 있음.

## * 상속

객체 중심 프로그래밍 언어가 갖는 특징 중 객체 사이 관계와 가장 밀접한 것은 상속이다. 
상위 클래스에 일반화된 속성과 행동을 추상화해 놓으면 하위 클래스는 그것을 상속받아 좀 더 구체화한다.

objc_class 구조체 선언을 보면
'''
typedef struct objc_class *Class;
struct objc_class {
...
Class super_class			OBJC2_UNAVAILABLE; 
...
} OBJC2_UNAVAILABLE;
'''
super_class 포인터가 존재한다. 
최상위 클래스는 super 포인터가 nil 값이 된다.
메타 클래스끼리도 상속 관계가 그대로 존재한다.

## * is-a 관계와 has-a 관계

**is-a 관계:**
객체 인스턴스 - 클래스     ex) aPen is-a Pen
서브 클래스 - 슈퍼클래스    ex) Pen is-a NSObject

**has-a 관계:**
구성 관계(composition) : 강한 참조 결합성(strong)을 가진다. 참조하는 객체가 사라질 때 하위 객체도 함께 사라짐.
집합 관계(aggregation): 약한 참조 결합성(weak)을 가진다. 참조하는 객체가 사라지더라도 하위 객체는 사라지지 않는다.

## * 요약
상속관계는 객체 사이 관계를 바꾸기 어려운(유지보수나 리팩터링이 어려운) 밀결합 형태이다. 
objc에서는 상속보다는 카테고리로 객체를 확장하는 것을 권장한다. (7.3.1 팩토리 추상화 패턴 참고)
이유1. 코코아 객체는 내부가 보이지 않는 불투명한 클래스가 많다.
이유2. 팩토리 클래스에서 객체 인스턴스를 생성하면서 데이터 구조에 맞는 내부 클래스가 결정된다.
